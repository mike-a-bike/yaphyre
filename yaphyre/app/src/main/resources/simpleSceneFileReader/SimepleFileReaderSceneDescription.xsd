<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2014 Michael Bieri
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:yaphyre="http://www.zweivelo.ch/yaphyre/simple"
           targetNamespace="http://www.zweivelo.ch/yaphyre/simple"
           elementFormDefault="qualified">

    <xs:element name="simpleScene">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="yaphyre:globalSettings"/>
                <xs:element name="cameras" type="yaphyre:cameraList"/>
                <xs:element name="geometry" type="yaphyre:geometryList"/>
                <xs:element name="shaders" type="yaphyre:shaderList"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="globalSettings">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="surfaceIntegrator" type="yaphyre:surfaceIntegratorType"/>
                <xs:element name="cameraSampler" type="yaphyre:sampler"/>
                <xs:element name="lightSampler" type="yaphyre:sampler"/>
                <xs:element name="defaultSampler" type="yaphyre:sampler"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="sampler">
        <xs:sequence>
            <xs:element name="method" type="yaphyre:samplingMethod"/>
            <xs:element name="samples" type="xs:positiveInteger" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="singleInstance" type="xs:boolean" default="false"/>
    </xs:complexType>

    <xs:simpleType name="samplingMethod">
        <xs:restriction base="xs:string">
            <xs:enumeration value="single"/>
            <xs:enumeration value="regular"/>
            <xs:enumeration value="stratified"/>
            <xs:enumeration value="halton"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="surfaceIntegratorType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="RayCaster"/>
            <xs:enumeration value="DebuggingRayCaster"/> <!-- For debugging purposes -->
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="cameraList">
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element ref="yaphyre:orthographicCamera"/>
            <xs:element ref="yaphyre:perspectiveCamera"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="camera" abstract="true">
        <xs:sequence>
            <xs:element name="filetype" type="yaphyre:fileType"/>
            <xs:element name="resolution" type="yaphyre:int2"/>
            <xs:element name="position" type="yaphyre:point3d"/>
            <xs:element name="lookAt" type="yaphyre:point3d"/>
            <xs:element name="up" type="yaphyre:normal3d" minOccurs="0"/>
            <xs:element name="skycolor" type="yaphyre:color" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:token" use="required"/>
        <xs:attribute name="id" type="xs:ID"/>
    </xs:complexType>

    <xs:element name="orthographicCamera">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="yaphyre:camera">
                    <xs:sequence>
                        <xs:element name="uDimension" type="yaphyre:nonNegativeDouble"/>
                        <xs:element name="vDimension" type="yaphyre:nonNegativeDouble"/>
                        <xs:element name="zPosition" type="xs:double"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="perspectiveCamera">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="yaphyre:camera">
                    <xs:sequence>
                        <xs:element name="fov" type="yaphyre:nonNegativeDouble"/>
                        <xs:element name="aspectRatio" type="yaphyre:nonNegativeDouble"/>
                        <xs:element name="near" type="yaphyre:nonNegativeDouble" minOccurs="0"/>
                        <xs:element name="far" type="yaphyre:nonNegativeDouble" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="fileType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="PNG"/>
            <xs:enumeration value="JPG"/>
            <xs:enumeration value="GIF"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="geometryList">
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element ref="yaphyre:simpleSphere"/>
            <xs:element ref="yaphyre:plane"/>
        </xs:choice>
    </xs:complexType>

    <xs:element name="simpleSphere">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="yaphyre:geometryBase"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="plane">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="yaphyre:geometryBase"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="geometryBase" abstract="true">
        <xs:sequence>
            <xs:element name="transformation" type="xs:IDREF"/>
            <xs:choice>
                <xs:element name="shaderRef" type="xs:IDREF"/>
                <xs:element name="shader">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:group ref="yaphyre:shaderGroup"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="name" type="xs:token"/>
        <xs:attribute name="id" type="xs:ID"/>
    </xs:complexType>

    <xs:complexType name="shaderList">
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:group ref="yaphyre:shaderGroup"/>
        </xs:choice>
    </xs:complexType>

    <xs:group name="shaderGroup">
        <xs:choice>
            <xs:element ref="yaphyre:colorShader"/>
        </xs:choice>
    </xs:group>

    <xs:element name="colorShader">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="yaphyre:namedType">
                    <xs:sequence>
                        <xs:element name="color" type="yaphyre:color"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="namedType">
        <xs:attribute name="name" type="xs:token"/>
        <xs:attribute name="id" type="xs:ID"/>
    </xs:complexType>

    <xs:simpleType name="int2">
        <xs:restriction base="yaphyre:listOfInts">
            <xs:minLength value="2"/>
            <xs:maxLength value="2"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="color">
        <xs:restriction base="yaphyre:listOnNonNegativeDoubles">
            <xs:length value="3"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="vector3d">
        <xs:restriction base="yaphyre:listOfDoubles">
            <xs:length value="3"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="point3d">
        <xs:restriction base="yaphyre:listOfDoubles">
            <xs:length value="3"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="normal3d">
        <xs:restriction base="yaphyre:listOfDoubles">
            <xs:length value="3"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="listOfInts">
        <xs:list itemType="xs:int"/>
    </xs:simpleType>
    <xs:simpleType name="listOfDoubles">
        <xs:list itemType="xs:double"/>
    </xs:simpleType>
    <xs:simpleType name="listOnNonNegativeDoubles">
        <xs:list itemType="yaphyre:nonNegativeDouble"/>
    </xs:simpleType>
    <xs:simpleType name="nonNegativeDouble">
        <xs:restriction base="xs:double">
            <xs:minInclusive value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="nonNegativeInt">
        <xs:restriction base="xs:int">
            <xs:minInclusive value="0"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>